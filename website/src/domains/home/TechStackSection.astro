---
import astro from "@/assets/images/astro.svg";
import github from "@/assets/images/github.svg";
import java from "@/assets/images/java.svg";
import next from "@/assets/images/next.svg";
import nuxt from "@/assets/images/nuxt.svg";
import prisma from "@/assets/images/prisma.svg";
import react from "@/assets/images/react.svg";
import tailwind from "@/assets/images/tailwind.svg";
import typescript from "@/assets/images/typescript.svg";
import vue from "@/assets/images/vue.svg";
import aws from "@/assets/images/aws.svg";
import spring from "@/assets/images/spring.svg";
import gitlab from "@/assets/images/gitlab.svg";
import kubernetes from "@/assets/images/kubernetes.svg";
import go from "@/assets/images/go.svg";
import docker from "@/assets/images/docker.svg";
import playwright from "@/assets/images/playwright.svg";
import python from "@/assets/images/python.svg";
import vite from "@/assets/images/vite.svg";
import robot from "@/assets/images/robot.svg";
import dynamodb from "@/assets/images/dynamodb.svg";
import node from "@/assets/images/node.svg";
import postgres from "@/assets/images/postgres.svg";
import storybook from "@/assets/images/storybook.svg";
import rust from "@/assets/images/rust.svg";
import graphql from "@/assets/images/graphql.svg";

import { Card } from "@/ui/Card";
import { MonitorSmartphone, Server, Wrench } from "lucide-react";

const devOpsIcons: TechIcon[] = [
  { src: aws, alt: "aws logo", title: "AWS", href: "https://aws.amazon.com/" },
  { src: github, alt: "github logo", title: "Github", href: "https://github.com/" },
  { src: gitlab, alt: "gitlab logo", title: "Gitlab", href: "https://gitlab.com/" },
  { src: kubernetes, alt: "kubernetes logo", title: "Kubernetes", href: "https://kubernetes.io/" },
  { src: go, alt: "go logo", title: "Go", href: "https://go.dev/" },
  { src: docker, alt: "docker logo", title: "Docker", href: "https://www.docker.com/" },
  { src: python, alt: "python logo", title: "Python", href: "https://www.python.org/" },
  { src: playwright, alt: "playwright logo", title: "Playwright", href: "https://playwright.dev/" },
  { src: robot, alt: "robot logo", title: "Robot Framework", href: "https://robotframework.org/" },
];

const backendIcons: TechIcon[] = [
  { src: typescript, alt: "typescript logo", title: "TypeScript", href: "https://www.typescriptlang.org/" },
  { src: graphql, alt: "graphql logo", title: "GraphQL", href: "https://graphql.org/" },
  { src: node, alt: "node logo", title: "NodeJs", href: "https://nodejs.org/" },
  { src: java, alt: "java logo", title: "Java", href: "https://java.com/" },
  { src: spring, alt: "spring logo", title: "Spring", href: "https://spring.io/" },
  { src: prisma, alt: "prisma logo", title: "Prisma", href: "https://www.prisma.io/" },
  { src: dynamodb, alt: "dynamodb logo", title: "Dynamodb", href: "https://aws.amazon.com/dynamodb/" },
  { src: postgres, alt: "postgres logo", title: "Postgres", href: "https://www.postgresql.org/" },
  { src: rust, alt: "rust logo", title: "Rust", href: "https://www.rust-lang.org/" },
];

const frontendIcons: TechIcon[] = [
  { src: next, alt: "next logo", title: "Next", href: "https://nextjs.org/" },
  { src: nuxt, alt: "nuxt logo", title: "Nuxt", href: "https://nuxt.com/" },
  { src: typescript, alt: "typescript logo", title: "TypeScript", href: "https://www.typescriptlang.org/" },
  { src: react, alt: "react logo", title: "React", href: "https://reactjs.org/" },
  { src: vue, alt: "vue logo", title: "Vue", href: "https://vuejs.org/" },
  { src: tailwind, alt: "tailwind logo", title: "Tailwind", href: "https://tailwindcss.com/" },
  { src: astro, alt: "astro logo", title: "Astro", href: "https://astro.build/" },
  { src: storybook, alt: "storybook logo", title: "Storybook", href: "https://storybook.js.org/" },
  { src: vite, alt: "vite logo", title: "Vite", href: "https://vitejs.dev/" },
];
import { Image } from "astro:assets";
import { LogoOutline } from "@/ui/icons/LogoOutline";

interface TechIcon {
  src: ImageMetadata;
  alt: string;
  title: string;
  href: string;
}
---

<section
  id="tech-stack"
  class="relative border-solid  border-neutral-900 flex items-start bg-black pb-40"
>
  <div class="container mx-auto px-4 z-10 flex flex-col items-start justify-start">
    <h2 class="text-center text-fl-2xl font-bold py-14 md:py-40 w-full">Unser Tech Stack</h2>
    <div class="flex flex-col gap-64 w-full items-center lg:items-start">
      <div class="flex flex-col lg:flex-row border border-solid border-neutral-800">
        <Card className=" bg-black/50 max-w-prose ">
          <Card.Header className="flex gap-4 items-center">
            <div class="flex items-center justify-center p-1 bg-primary-500/10">
              <div class="flex p-2 relative bg-primary-500/10">
                <Wrench className="text-primary-500" size={24} />
              </div>
            </div>
            <h3 class="text-fl-sm text-center">DevOps</h3>
          </Card.Header>
          <Card.Body className="text-neutral-400 flex flex-col gap-8 pb-8">
            <p class="text-fl-sm leading-[1.5] md:tracking-wide">
              Zum letzten Mal nach händischen Versionsänderungen fragen: Wir automasieren alles - von
              Infrastruktur bis hinzu Testing und Releases.
            </p>
          </Card.Body>
        </Card>
        <Card
          className="flex-shrink-0 bg-neutral-950/60 heropattern-graphpaper-neutral-800 border-t lg:border-t-0 lg:border-l border-neutral-800 border-solid "
        >
          <Card.Body className="grid grid-cols-3 gap-8 justify-items-center lg:gap-11 p-6 lg:p-6">
            {
              devOpsIcons.map((icon) => (
                <a class="min-w-[48px] min-h-[48px] " href={icon.href} title={icon.title} target="_blank">
                  <Image width={48} height={48} src={icon.src} alt={icon.alt} />
                </a>
              ))
            }
          </Card.Body>
        </Card>
      </div>
      <div class="flex flex-col lg:flex-row-reverse border border-solid border-neutral-800 lg:self-end">
        <Card className=" bg-black/50 max-w-prose">
          <Card.Header className="flex gap-4 items-center">
            <div class="flex items-center justify-center p-1 bg-primary-500/10">
              <div class="flex p-2 relative bg-primary-500/10">
                <Server className="text-primary-500" size={24} />
              </div>
            </div>
            <h3 class="text-fl-sm text-center">Backend</h3>
          </Card.Header>
          <Card.Body className="text-neutral-400 flex flex-col gap-8 pb-8">
            <p class="text-fl-sm leading-[1.5] md:tracking-wide">
              Datenbanken müssen keine Beamten sein: Wir entwerfen eine performante Datenbank-Schnittstelle
              passend zu Ihren Anforderungen.
            </p>
          </Card.Body>
        </Card>
        <Card
          className="flex-shrink-0 bg-neutral-950/60 heropattern-graphpaper-neutral-800 border-t lg:border-t-0 lg:border-r border-neutral-800 border-solid "
        >
          <Card.Body className="grid grid-cols-3 gap-8 justify-items-center lg:gap-11 p-6 lg:p-6">
            {
              backendIcons.map((icon) => (
                <a href={icon.href} title={icon.title} target="_blank">
                  <Image width={48} height={48} src={icon.src} alt={icon.alt} />
                </a>
              ))
            }
          </Card.Body>
        </Card>
      </div><div class="flex flex-col lg:flex-row border border-solid border-neutral-800">
        <Card className=" bg-black/50 max-w-prose">
          <Card.Header className="flex gap-4 items-center">
            <div class="flex items-center justify-center p-1 bg-primary-500/10">
              <div class="flex p-2 relative bg-primary-500/10">
                <MonitorSmartphone className="text-primary-500" size={24} />
              </div>
            </div>
            <h3 class="text-fl-sm text-center">Frontend</h3>
          </Card.Header>
          <Card.Body className="text-neutral-400 flex flex-col gap-8 pb-8">
            <p class="text-fl-sm leading-[1.5] md:tracking-wide">
              Software darf auch schön: Wir erschaffen atemberaubende UI's mit dem Fokus auf den Nutzer.
            </p>
          </Card.Body>
        </Card>
        <Card
          className="flex-shrink-0 bg-neutral-950/60 heropattern-graphpaper-neutral-800 border-t lg:border-t-0 lg:border-l border-neutral-800 border-solid "
        >
          <Card.Body className="grid grid-cols-3 gap-8 justify-items-center lg:gap-11 p-6 lg:p-6">
            {
              frontendIcons.map((icon) => (
                <a href={icon.href} title={icon.title} target="_blank">
                  <Image width={48} height={48} src={icon.src} alt={icon.alt} />
                </a>
              ))
            }
          </Card.Body>
        </Card>
      </div>
    </div>
  </div>
  <div class="absolute w-full h-full top-0 left-0 overflow-x-hidden">
    <LogoOutline
    className="absolute top-1/2 left-1/2 transform -translate-x-1/2  -translate-y-1/2 h-[200%]  text-neutral-900/50"
  />
  </div>

</section>
